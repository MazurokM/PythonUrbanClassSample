Задача 1

class GreenZoneIndex:
    def __init__(self, territory_name, territory_area, green_zones):
        """
        :param territory_name: Название территории
        :param territory_area: Площадь территории
        :param green_zones: Список площадей парков
        """
        # TODO все аргументы конструктора записать в атрибуты экземпляра класса
        self.territory_name = territory_name
        self.territory_area = territory_area
        self.green_zones = green_zones


        self.green_index = self.calculate_green_index()  # индекс озеленения
        # TODO посчитать индекс озеленения с помощью метода calculate_green_index


    def calculate_green_index(self):
        """
        Метод для вычисления индекса озеленения.

        Индекс рассчитывается как отношение площади всех парков к площади территории
        """
        self.green_index = sum(self.green_zones) / self.territory_area
        return round(self.green_index * 100, 2)
        # TODO посчитать индекс озеленения с атрибутов экземпляра класса


territory_name = "Пушкин"
territory_area = 28676,
green_zones = [302, 487, 420, 325, 471, 363, 404]
# TODO Создать экземпряр класса и с помощью его атрибутов распечатать индекс озеленения в процентах до 2 знака после запятой. 
pushkin_city = GreenZoneIndex("Пушкин", 28676, [302, 487, 420, 325, 471, 363, 404])
# Ожидаемый ответ Индекс озеленения территории Пушкин равен 9.67%

print (pushkin_city.territory_name)
print ("Индекс озеленения территории города", pushkin_city.green_index)


class GreenZoneIndex:
    def __init__(self, territory_name, territory_area, green_zones):
        """
        :param territory_name: Название территории
        :param territory_area: Площадь территории
        :param green_zones: Список площадей парков
        """
        # TODO все аргументы конструктора записать в атрибуты экземпляра класса
        self.territory_name = territory_name
        self.territory_area = territory_area
        self.green_zones = green_zones


        self.green_index = self.calculate_green_index()  # индекс озеленения
        # TODO посчитать индекс озеленения с помощью метода calculate_green_index


    def calculate_green_index(self):
        """
        Метод для вычисления индекса озеленения.

        Индекс рассчитывается как отношение площади всех парков к площади территории
        """
        self.green_index = sum(self.green_zones) / self.territory_area
        return round(self.green_index * 100, 2)
        # TODO посчитать индекс озеленения с атрибутов экземпляра класса


territory_name = "Пушкин"
territory_area = 28676
green_zones = [302, 487, 420, 325, 471, 363, 404]
# TODO Создать экземпряр класса и с помощью его атрибутов распечатать индекс озеленения в процентах до 2 знака после запятой. 
pushkin_city = GreenZoneIndex("Пушкин", 28676, [302, 487, 420, 325, 471, 363, 404])
# Ожидаемый ответ Индекс озеленения территории Пушкин равен 9.67%

print (pushkin_city.territory_name)
print (f"Индекс озеленения территории города{pushkin_city.territory_name} равен {pushkin_city.green_index}%")


Задача 2

list_territories = [
    {
        "territory_name": "Пушкин",
        "territory_area": 28676,
        "green_zones": [302, 487, 420, 325, 471, 363, 404]
    },
    {
        "territory_name": "Павловск",
        "territory_area": 21025,
        "green_zones": [360, 375, 223, 258, 345, 296, 303]
    },
    {
        "territory_name": "Петергоф",
        "territory_area": 44274,
        "green_zones": [364, 447, 438, 223, 336, 431, 442]
    },
]

list_territories_class = []
for i in range(len(list_territories)):
    list_territories_class.append(GreenZoneIndex(list_territories[i]['territory_name'], list_territories[i]['territory_area'], list_territories[i]['green_zones']))

print(list_territories_class


Задача 3

def get_mean_green_index(list_):
    a = sum(list_) / len(list_)

    return round(a, 2)

list_GreenZoneIndex_1 = [9.76,  10.5, 17.2]

print(get_mean_green_index(list_GreenZoneIndex_1))
